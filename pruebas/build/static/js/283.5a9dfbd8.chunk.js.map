{"version":3,"file":"static/js/283.5a9dfbd8.chunk.js","mappings":"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","sources":["components/Diagnosticos/RevisionDiag.js","components/Visualizador/DicomViewer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./RevisionDiag.css\"\nimport Header from '../assets/Header';\nimport Footer from '../assets/Footer';\nimport DicomViewer from '../Visualizador/DicomViewer';\n//import { BASE_URL } from '../config/config';\n\nconst RevisionDiagnostico = ({ onSearch }) => {\n\n    // Estado para los campos de búsqueda\n    const [nombre, setNombre] = useState('');\n    const [correo, setCorreo] = useState('');\n    const [imagen, setImagen] = useState('');\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [revision, setRevision] = useState('')\n\n    const [resultados, setResultados] = useState([]);\n\n    const handleSearch = (searchParams) => {\n        // Aquí puedes hacer la lógica de filtrado. Por ejemplo:\n        console.log('Buscando con los siguientes parámetros:', searchParams);\n\n        // Si estás buscando en una lista de datos estática:\n        const datos = [\n            { nombre: 'Juan Pérez', correo: 'juan@example.com', imagen: 'imagen1.jpg' },\n            { nombre: 'María Gómez', correo: 'maria@example.com', imagen: 'imagen2.jpg' },\n            // otros datos...\n        ];\n\n        // Filtrar los datos basados en los parámetros de búsqueda\n        const resultadosFiltrados = datos.filter((item) => {\n            return (\n                (searchParams.nombre ? item.nombre.toLowerCase().includes(searchParams.nombre.toLowerCase()) : true) &&\n                (searchParams.correo ? item.correo.toLowerCase().includes(searchParams.correo.toLowerCase()) : true) &&\n                (searchParams.imagen ? item.imagen.toLowerCase().includes(searchParams.imagen.toLowerCase()) : true)\n            );\n        });\n        // Establecer los resultados de la búsqueda\n        setResultados(resultadosFiltrados);\n    };\n\n    const [formData, setFormData] = useState({\n        hallazgos: '',\n        impresion: '',\n        observaciones: '',\n        medico: '',\n        medicoNuevo: localStorage.getItem('nombre'),\n        fecha: '',\n        tipoEstudio: '',\n        region: '',\n        proyeccion: '',\n        valido: '',\n        obtencion: '',\n        sexo: '',\n        edad: ''\n    });\n\n\n    // Manejadores de eventos para actualizar los estados\n    const handleNombreChange = (e) => setNombre(e.target.value);\n    const handleCorreoChange = (e) => setCorreo(e.target.value);\n    const handleImagenChange = (e) => setImagen(e.target.value);\n\n    // Enviar la búsqueda\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Llamar a la función de búsqueda pasando los valores\n        onSearch({ nombre, correo, imagen });\n    };\n\n    return (\n        <div>\n            <Header />\n            <div>\n                <div className='contenido-principal-revision'>\n                    <div className=\"revision-formulario\">\n                        <form onSubmit={handleSubmit} className=\"search-form\">\n                            <div>\n                                <label htmlFor=\"nombre\">Nombre:</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"nombre\"\n                                    value={nombre}\n                                    onChange={handleNombreChange}\n                                    placeholder=\"Buscar por nombre del medico\"\n                                />\n                            </div>\n\n                            <div>\n                                <label htmlFor=\"correo\">Correo:</label>\n                                <input\n                                    type=\"email\"\n                                    id=\"correo\"\n                                    value={correo}\n                                    onChange={handleCorreoChange}\n                                    placeholder=\"Buscar por correo del medico\"\n                                />\n                            </div>\n\n                            <div>\n                                <label htmlFor=\"imagen\">Imagen:</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"imagen\"\n                                    value={imagen}\n                                    onChange={handleImagenChange}\n                                    placeholder=\"Buscar por nombre del estudio\"\n                                />\n                            </div>\n\n                            <button type=\"submit\">Buscar</button>\n                        </form>\n                    </div>\n                    {/* Mostrar los resultados de la búsqueda en una tabla */}\n                    <div className='TablaDiagnosticos'>\n                        <h2>Resultados de la búsqueda:</h2>\n                        <table border=\"1\">\n                            <thead>\n                                <tr>\n                                    <th>Nombre del Estudio</th>\n                                    <th>Nombre del Médico</th>\n                                    <th>Fecha</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {resultados.length > 0 ? (\n                                    resultados.map((item, index) => (\n                                        <tr key={index}>\n                                            <td>{item.nombreEstudio}</td>\n                                            <td>{item.nombreMedico}</td>\n                                            <td>{item.fecha}</td>\n                                        </tr>\n                                    ))\n                                ) : (\n                                    <tr>\n                                        <td colSpan=\"3\">No se encontraron resultados</td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className='next-module' />\n                <div className='contenido-principal-revision'>\n                    <div className=\"form-diagnostico-revision\" style={{ margin: '20px' }}>\n                        <h2>Diagnóstico</h2>\n                        <form onSubmit={handleSubmit}>\n\n                            <div className=\"form-group\">\n                                <label style={{ fontWeight: 'bold' }}>Región:</label>\n                                <br/>\n                                <select\n                                    name=\"region\"\n                                    value={formData.region}\n                                    readOnly\n                                >\n                                    <option value=\"\">Seleccione</option>\n                                    <option value=\"00\">Desconocido</option>\n                                    <option value=\"02\">Columna Vertebral</option>\n                                    <option value=\"26\">Pelvis</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label style={{ fontWeight: 'bold' }}>Proyección:</label>\n                                <br/>\n                                <select\n                                    name=\"proyeccion\"\n                                    value={formData.proyeccion}\n                                    readOnly\n                                >\n                                    <option value=\"\">Seleccione</option>\n                                    <option value=\"00\">Desconocido</option>\n                                    <option value=\"01\">Postero Anterior</option>\n                                    <option value=\"02\">Antero Posterior</option>\n                                    <option value=\"03\">Obliqua</option>\n                                    <option value=\"04\">Lateral Izquierda</option>\n                                    <option value=\"05\">Lateral Derecha</option>\n                                    <option value=\"06\">Especial</option>\n                                    <option value=\"07\">Comparativa</option>\n                                </select>\n                            </div>\n\n                            <div style={{ marginBottom: '15px' }}>\n                                <label style={{ fontWeight: 'bold' }} htmlFor=\"hallazgos\">Hallazgos:</label>\n                                <textarea\n                                    id=\"hallazgos\"\n                                    name=\"hallazgos\"\n                                    placeholder=\"Hallazgos\"\n                                    value={formData.hallazgos}\n                                    readOnly\n                                    style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px', height: '100px', resize: 'vertical' }}\n                                />\n                            </div>\n\n                            <div style={{ marginBottom: '15px' }}>\n                                <label style={{ fontWeight: 'bold' }} htmlFor=\"impresion\">Impresión Diagnóstica:</label>\n                                <textarea\n                                    id=\"impresion\"\n                                    name=\"impresion\"\n                                    placeholder=\"Impresión diagnóstica\"\n                                    value={formData.impresion}\n                                    readOnly\n                                    style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px', height: '100px', resize: 'vertical' }}\n                                />\n                            </div>\n\n                            <div style={{ marginBottom: '15px' }}>\n                                <label style={{ fontWeight: 'bold' }} htmlFor=\"observaciones\">Observaciones:</label>\n                                <textarea\n                                    id=\"observaciones\"\n                                    name=\"observaciones\"\n                                    placeholder=\"Observaciones\"\n                                    value={formData.observaciones}\n                                    readOnly\n                                    style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px', height: '100px', resize: 'vertical' }}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label style={{ fontWeight: 'bold' }}>Sexo:</label>\n                                <br/>\n                                <select\n                                    name=\"sexo\"\n                                    value={formData.sexo}\n                                    readOnly\n                                >\n                                    <option value=\"\">Seleccione</option>\n                                    <option value=\"0\">Desconocido</option>\n                                    <option value=\"1\">Masculino</option>\n                                    <option value=\"2\">Femenino</option>\n                                </select>\n                            </div>\n\n                            {/* Edad */}\n                            <div className=\"form-group\">\n                                <label style={{ fontWeight: 'bold' }}>Edad:</label>\n                                <br/>\n                                <select name=\"edad\" value={formData.edad} readOnly>\n                                    <option value=\"\">Seleccione</option>\n                                    <option value=\"0\">Desconocido</option>\n                                    <option value=\"1\">Lactante menores de 1 año</option>\n                                    <option value=\"2\">Prescolar 1-5</option>\n                                    <option value=\"3\">Infante 6-12</option>\n                                    <option value=\"4\">Adolescente 13-18</option>\n                                    <option value=\"5\">Adulto joven 19-26</option>\n                                    <option value=\"6\">Adulto 27-59</option>\n                                    <option value=\"7\">Adulto mayor 60+</option>\n                                </select>\n                            </div>\n\n                            {/* Campo para el médico */}\n                            <div style={{ marginBottom: '15px' }}>\n                                <label style={{ fontWeight: 'bold' }} htmlFor=\"medicoA\">Médico que hizo el diagnóstico:</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"medicoA\"\n                                    name=\"medicoA\"\n                                    placeholder=\"Ingresa el nombre del médico\"\n                                    value={formData.medico}\n                                    readOnly\n                                    style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px' }}\n                                />\n                            </div>\n\n                            {/* Campo para la fecha */}\n                            <div style={{ marginBottom: '15px' }}>\n                                <label style={{ fontWeight: 'bold' }} htmlFor=\"fecha\">Fecha del diagnóstico:</label>\n                                <input\n                                    type=\"date\"\n                                    id=\"fecha\"\n                                    name=\"fecha\"\n                                    value={formData.fecha} // Asegúrate de que formData.fecha tenga un valor de fecha válido\n                                    readOnly\n                                    style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px' }}\n                                />\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"imageEstudio\">\n                        {selectedImage ? (\n                            <DicomViewer fileName={selectedImage} />\n                        ) : (\n                            <p>Selecciona un estudio para ver la imagen DICOM.</p>\n                        )}\n                    </div>\n                </div>\n                <div className='contenido-principal-revision'>\n                    <div style={{ marginBottom: '15px', width: '60%' }}>\n                        <label style={{ fontWeight: 'bold' }} htmlFor=\"impresion\">Observaciones</label>\n                        <textarea\n                            id=\"revision\"\n                            name=\"revision\"\n                            placeholder=\"Observaciones del diagnostico\"\n                            value={revision}\n                            style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px', height: '100px'}}\n                        />\n                        <button>Enviar comentarios</button>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default RevisionDiagnostico;","import React, { useState, useEffect, useRef } from 'react';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport dicomParser from 'dicom-parser';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport { BASE_URL } from '../config/config';\nimport { ZoomTool, PanTool, LengthTool, RotateTool } from 'cornerstone-tools';\n\n// Configurar el cargador de imágenes DICOM\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone;\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\n// Configurar herramientas\nconst configureTools = () => {\n  cornerstoneTools.addTool(ZoomTool);\n  cornerstoneTools.addTool(PanTool);\n  cornerstoneTools.addTool(LengthTool);\n  cornerstoneTools.addTool(RotateTool); // Asumiendo que existe RotateTool\n\n  cornerstoneTools.setToolActive('Zoom', { mouseButtonMask: 1 });\n  cornerstoneTools.setToolActive('Pan', { mouseButtonMask: 1 });\n  cornerstoneTools.setToolActive('Length', { mouseButtonMask: 1 });\n  cornerstoneTools.setToolActive('Rotate', { mouseButtonMask: 1 }); // Asumiendo que existe RotateTool\n};\n\nconst DicomViewer = ({ fileName }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    const element = elementRef.current;\n\n    if (element && fileName) {\n      const imageId = `wadouri:${BASE_URL}/image/${fileName}`;\n\n      const loadImage = async () => {\n        setLoading(true);\n        setError(null);\n\n        try {\n          cornerstone.enable(element);\n          configureTools();\n\n          const image = await cornerstone.loadImage(imageId);\n          cornerstone.displayImage(element, image);\n\n          // Activar la herramienta de zoom por defecto\n          cornerstoneTools.setToolActive('Zoom', { mouseButtonMask: 1 });\n\n        } catch (error) {\n          setError('Error al cargar la imagen DICOM.');\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      loadImage();\n\n      return () => {\n        if (element) {\n          cornerstone.disable(element);\n        }\n      };\n    }\n  }, [fileName]);\n\n  const zoomIn = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.scale *= 1.2; // Incrementar el nivel de zoom\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const zoomOut = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.scale /= 1.2; // Decrementar el nivel de zoom\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const moveLeft = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.translation.x -= 10; // Mover a la izquierda\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const moveRight = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.translation.x += 20; // Mover a la derecha\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const moveUp = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.translation.y -= 20; // Mover hacia arriba\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const moveDown = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.translation.y += 20; // Mover hacia abajo\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const rotateClockwise = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.rotation += 0.75; // Rotar en sentido horario\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const rotateCounterClockwise = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.rotation -= 0.75; // Rotar en sentido antihorario\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  return (\n    <div className=\"dicom-viewer-container\">\n      <div\n        onContextMenu={(e) => e.preventDefault()}\n        ref={elementRef}\n        className=\"dicom-viewer\"\n        style={{ width: '100%', height: '100%' }}\n      >\n        {loading && <p>Cargando imagen DICOM...</p>}\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n      </div>\n\n      <div className=\"tool-buttons\" style={{ marginTop: '10px', display: 'flex', justifyContent: 'center', gap: '10px' }}>\n        <button onClick={zoomIn}>Zoom +</button>\n        <button onClick={zoomOut}>Zoom -</button>\n        <button onClick={moveDown}>Mover ↑</button>\n        <button onClick={rotateCounterClockwise}>Rotar ←</button>\n        <button onClick={rotateClockwise}>Rotar →</button>\n        <button onClick={moveRight}>Mover ←</button>\n        <button onClick={moveUp}>Mover ↓</button>\n        <button onClick={moveLeft}>Mover →</button>\n      </div>\n    </div>\n  );\n\n};\n\nexport default DicomViewer;"],"names":["_ref","onSearch","nombre","setNombre","useState","correo","setCorreo","imagen","setImagen","selectedImage","setSelectedImage","revision","setRevision","resultados","setResultados","formData","setFormData","hallazgos","impresion","observaciones","medico","medicoNuevo","localStorage","getItem","fecha","tipoEstudio","region","proyeccion","valido","obtencion","sexo","edad","handleSubmit","e","preventDefault","_jsxs","children","_jsx","Header","className","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","border","length","map","item","index","nombreEstudio","nombreMedico","colSpan","style","margin","fontWeight","name","readOnly","marginBottom","width","padding","marginTop","borderRadius","height","resize","DicomViewer","fileName","Footer","cornerstoneWADOImageLoader","cornerstone","dicomParser","loading","setLoading","error","setError","elementRef","useRef","useEffect","element","current","imageId","BASE_URL","async","cornerstoneTools","ZoomTool","PanTool","LengthTool","RotateTool","mouseButtonMask","image","loadImage","onContextMenu","ref","color","display","justifyContent","gap","onClick","zoomIn","viewport","scale","zoomOut","moveDown","translation","y","rotateCounterClockwise","rotation","rotateClockwise","moveRight","x","moveUp","moveLeft"],"sourceRoot":""}