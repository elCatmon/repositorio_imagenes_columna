{"version":3,"file":"static/js/692.872f3b7c.chunk.js","mappings":"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","sources":["components/Donaciones/modalAcciones.js","components/Donaciones/ConsultarDonaciones.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ConsultarDonaciones.css'\nimport Modal from 'react-modal';\nimport { BASE_URL } from '../config/config';\n\nconst ModalAcciones = ({ folio, fecha_recepcion, Correo, show, onClose }) => {\n\n    const handleSendEmail = () => {\n        console.log(fecha_recepcion, Correo)\n        fetch(`${BASE_URL}/api/estudios/confirmar-digitalizacion`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                correo: Correo,\n                fecha: fecha_recepcion,\n                folio: folio\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"Correo enviado:\", data);\n                alert(\"Correo enviado:\", data);\n            })\n            .catch((error) => {\n                console.error(\"Error al enviar el correo:\", error);\n            });\n    };\n\n\n    const handleCancelDonation = () => {\n        console.log(\"Cancelar Donación\");\n    };\n\n    return (\n        <Modal\n            isOpen={show}\n            onRequestClose={onClose}\n            style={{\n                content: {\n                    width: '80%',\n                    maxWidth: '500px',\n                    maxHeight: '600px',\n                    margin: 'auto',\n                    padding: '20px',\n                    borderRadius: '8px',\n                    zIndex: 1000,\n                },\n                overlay: {\n                    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n                },\n            }}\n        >\n            <h2>Donacion: {folio}</h2>\n            <p className='modalID'>Fecha de recepcion: {fecha_recepcion}</p>\n            <div>\n                <p className='modalText'>Si el proceso de digitalizacion fue realizado</p>\n                <button className='btnModal' onClick={handleSendEmail}>\n                    Enviar Correo\n                </button>\n            </div>\n            <div>\n                <p className='modalText'>Si los estudios ya han sido anonimizados</p>\n                <button className='btnModal' onClick={handleCancelDonation}>\n                    Enviar Correo\n                </button>\n            </div>\n            <div>\n                <p className='modalText'>Si el usuario ya no desea que sus donaciones se encuentren en la biblioteca</p>\n                <button className='btnModal' onClick={handleCancelDonation}>\n                    Cancelar Donación\n                </button>\n            </div>\n            <div>\n                <div>\n                    <button className='btnModal' onClick={onClose} style={{ marginTop: '20px', padding: '10px' }}>\n                        Cerrar\n                    </button>\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\nexport default ModalAcciones;\n","import React, { useEffect, useState } from 'react';\nimport Header from '../assets/Header';\nimport Footer from '../assets/Footer';\nimport './ConsultarDonaciones.css';\nimport ModalAcciones from './modalAcciones';\nimport { BASE_URL } from '../config/config';\n\nfunction Estudios() {\n  const [estudios, setEstudios] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [filtros, setFiltros] = useState({\n    folio: '',\n    correo: '',\n    curp: '',\n    FechaRecepcion: ''\n  });\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalData, setModalData] = useState({ folio: '', fecha_Recepcion: '', correoD: '' });\n\n  const handleShowModal = (folio, fecha_Recepcion, correoD) => {\n    setModalData({ folio, fecha_Recepcion, correoD }); // Establece el folio, id y fechaRecepcion\n    console.log(folio, fecha_Recepcion, correoD)\n    setShowModal(true); // Muestra el modal\n  };\n\n\n  const handleCloseModal = () => {\n    setShowModal(false); // Cerrar el modal\n  };\n\n  const handleFiltroChange = (e) => {\n    const { name, value } = e.target;\n    setFiltros((prevFiltros) => ({\n      ...prevFiltros,\n      [name]: value,\n    }));\n  };\n\n  const handleBuscar = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    const queryParams = new URLSearchParams();\n    if (filtros.folio) queryParams.append(\"folio\", filtros.folio);\n    if (filtros.correo) queryParams.append(\"correo\", filtros.correo);\n    if (filtros.curp) queryParams.append(\"curp\", filtros.curp);\n    if (filtros.FechaRecepcion) queryParams.append(\"FechaRecepcion\", filtros.FechaRecepcion);\n\n    try {\n      const response = await fetch(`${BASE_URL}/api/estudios/consulta?${queryParams.toString()}`);\n      if (!response.ok) throw new Error(\"Error en la solicitud\");\n\n      const contentType = response.headers.get(\"content-type\");\n      if (contentType && contentType.includes(\"application/json\")) {\n        const data = await response.json();\n        setEstudios(data || []);\n      }\n    } catch (error) {\n      setError(\"Error al buscar estudios.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"next-module\">\n        <div className=\"contenido-principal\">\n          <div className=\"columna-formulario\">\n            <form onSubmit={handleBuscar}>\n              <h2>Buscar donaciones</h2>\n              <label>\n                Folio:\n                <input\n                  name=\"folio\"\n                  value={filtros.folio}\n                  onChange={handleFiltroChange}\n                  className=\"input-field\"\n                />\n              </label>\n              <label>\n                Correo:\n                <input\n                  type=\"email\"\n                  name=\"correo\"\n                  value={filtros.correo}\n                  onChange={handleFiltroChange}\n                  className=\"input-field\"\n                />\n              </label>\n              <label>\n                CURP:\n                <input\n                  name=\"curp\"\n                  value={filtros.curp}\n                  onChange={handleFiltroChange}\n                  className=\"input-field\"\n                />\n              </label>\n              <label>\n                Fecha de Recepción:\n                <input\n                  type=\"date\"\n                  name=\"FechaRecepcion\"\n                  value={filtros.FechaRecepcion}\n                  onChange={handleFiltroChange}\n                  className=\"input-field\"\n                />\n              </label>\n              <button className=\"btnBuscarDoancion\" type=\"submit\">Buscar</button>\n            </form>\n          </div>\n\n          <div className=\"columna-tabla\">\n\n            <h2>Lista de donaciones</h2>\n            {loading ? (\n              <p>Loading...</p>\n            ) : error ? (\n              <p>{error}</p>\n            ) : (\n              <div className=\"tablaConsultDonaciones-wrapper\">\n                <table className=\"tablaConsultDonaciones\">\n                  <thead>\n                    <tr>\n                      <th className=\"table-headerDonaiones\">Folio</th>\n                      <th className=\"table-headerDonaiones\">Fecha de Recepción</th>\n                      <th className=\"table-headerDonaiones\">Fecha de Devolución</th>\n                      <th className=\"table-headerDonaiones\">Donador</th>\n                      <th className=\"table-headerDonaiones\">Detalles del Estudio</th>\n                      <th className=\"table-headerDonaiones\">Operaciones</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {estudios.length > 0 ? (\n                      estudios.map((estudio) => (\n                        <tr key={estudio.folio}>\n                          <td className=\"informacion\">{estudio.folio}</td>\n                          <td className=\"informacion\">{new Date(estudio.fechaRecepcion).toISOString().split(\"T\")[0].split(\"-\").reverse().join(\"/\")}</td>\n                          <td className=\"informacion\">{estudio.fechaDevolucion ? new Date(estudio.fechaDevolucion).toISOString().split(\"T\")[0].split(\"-\").reverse().join(\"/\") : 'N/A'}</td>\n                          <td className=\"informacion\">{estudio.curp}</td>\n                          <td className=\"detalles\">\n                            <ul>\n                              {estudio.detallesEstudios && estudio.detallesEstudios.length > 0 ? (\n                                estudio.detallesEstudios.map((detalle, index) => (\n                                  <li key={index}>\n                                    <table>\n                                      <tbody>\n                                        <tr>\n                                          <td><strong>ID:</strong></td>\n                                          <td>{detalle.id || 'No disponible'}</td>\n                                        </tr>\n                                        <tr>\n                                          <td><strong>Tipo de Estudio:</strong></td>\n                                          <td>{detalle.tipoEstudio || 'No disponible'}</td>\n                                        </tr>\n                                        <tr>\n                                          <td><strong>Cantidad de Imágenes:</strong></td>\n                                          <td>{detalle.cantidadImagenes || 'No disponible'}</td>\n                                        </tr>\n                                        <tr>\n                                          <td><strong>Observaciones:</strong></td>\n                                          <td>{detalle.observaciones || 'No disponible'}</td>\n                                        </tr>\n                                        <tr>\n                                          <td><strong>Donación:</strong></td>\n                                          <td>{detalle.esDonacion ? \"Sí\" : \"No\"}</td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </li>\n                                ))\n                              ) : (\n                                <li>No hay detalles disponibles</li>\n                              )}\n                            </ul>\n                          </td>\n                          <td className=\"informacion\">\n                            <button className='btnOperaciones' onClick={() => handleShowModal(estudio.folio, estudio.fechaRecepcion, estudio.correo)}>\n                              Acciones\n                            </button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr><td colSpan=\"4\">No se encontraron donaciones.</td></tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"next-module\" />\n      <div className=\"next-module\">\n        <Footer />\n      </div>\n      <ModalAcciones\n        folio={modalData.folio}\n        fecha_recepcion={modalData.fecha_Recepcion}\n        Correo={modalData.correoD}\n        show={showModal}\n        onClose={handleCloseModal}\n      />\n    </div>\n  );\n}\n\nexport default Estudios;\n"],"names":["_ref","folio","fecha_recepcion","Correo","show","onClose","handleCancelDonation","console","log","_jsxs","Modal","isOpen","onRequestClose","style","content","width","maxWidth","maxHeight","margin","padding","borderRadius","zIndex","overlay","backgroundColor","children","className","_jsx","onClick","handleSendEmail","fetch","BASE_URL","method","headers","body","JSON","stringify","correo","fecha","then","response","json","data","alert","catch","error","marginTop","estudios","setEstudios","useState","loading","setLoading","setError","filtros","setFiltros","curp","FechaRecepcion","showModal","setShowModal","modalData","setModalData","fecha_Recepcion","correoD","handleFiltroChange","e","name","value","target","prevFiltros","Header","onSubmit","async","preventDefault","queryParams","URLSearchParams","append","toString","ok","Error","contentType","get","includes","onChange","type","length","map","estudio","Date","fechaRecepcion","toISOString","split","reverse","join","fechaDevolucion","detallesEstudios","detalle","index","id","tipoEstudio","cantidadImagenes","observaciones","esDonacion","handleShowModal","colSpan","Footer","ModalAcciones","handleCloseModal"],"sourceRoot":""}