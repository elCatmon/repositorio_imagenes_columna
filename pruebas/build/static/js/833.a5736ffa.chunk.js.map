{"version":3,"file":"static/js/833.a5736ffa.chunk.js","mappings":"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","sources":["components/Diagnosticos/Diagnosticos.js","components/Diagnosticos/DiagnosticosPage.js","components/Miniaturas/ThumbnailGallery.js","components/Visualizador/DicomViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BASE_URL } from '../config/config';\nimport './Diagnosticos.css';\n\nconst DiagnosticForm = ({ selectedFile }) => {\n  const [formData, setFormData] = useState({\n    hallazgos: '',\n    impresion: '',\n    observaciones: '',\n    medico: '',\n    medicoNuevo: localStorage.getItem('nombre'),\n    fecha: '',\n    tipoEstudio: '',\n    region: '',\n    proyeccion: '',\n    valido: '',\n    obtencion: '',\n    sexo: '',\n    edad: ''\n  });\n\n  // Define subregiones según la región seleccionada\n  const subregionesOptions = {\n    '02': [\n      { value: '03', label: 'Cervical' },\n      { value: '04', label: 'Torácica' },\n      { value: '05', label: 'Lumbar' },\n      { value: '06', label: 'Sacra' },\n      { value: '07', label: 'Coxis' }\n    ],\n    '26': [\n      { value: '18', label: 'Pelvis Adulto' },\n      { value: '19', label: 'Pelvis Infantil' },\n    ],\n  };\n  \n  const [clave, setClave] = useState(''); // Estado para almacenar la clave\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const fetchLatestDiagnostico = async () => {\n    try {\n      // Limpia los campos antes de actualizar el formulario\n      clearFormFields();\n\n      const fileName = selectedFile.split('/').pop();\n      const newFileName = fileName.replace(/\\.jpg$/, '.dcm');\n\n      const fetchStudyResponse = await fetch(`${BASE_URL}/estudios/dicom?nombre=${newFileName}`);\n      if (!fetchStudyResponse.ok) throw new Error('Error al obtener el estudio');\n\n      const study = await fetchStudyResponse.json();\n      if (!study || !study.estudio_id) throw new Error('Estudio no encontrado');\n\n      const fetchDiagnosticoResponse = await fetch(`${BASE_URL}/estudios/diagnostico?id=${study.estudio_id}&nombreImagen=${newFileName}`);\n      if (!fetchDiagnosticoResponse.ok) throw new Error('Error al obtener el diagnóstico');\n\n      const response = await fetchDiagnosticoResponse.json();\n      const diagnostico = response.diagnostico || {};\n      const claveImagen = response.clave || '';\n\n      setClave(claveImagen);\n\n      // Actualizar los campos del formulario con los nuevos valores\n      const valoresClave = obtenerValoresDesdeClave(claveImagen);\n      setFormData((prevData) => ({\n        ...prevData,\n        ...valoresClave,\n        hallazgos: diagnostico.Hallazgos || '',\n        impresion: diagnostico.Impresion || '',\n        observaciones: diagnostico.Observaciones || '',\n        medico: diagnostico.Medico || '',\n        fecha: diagnostico.Fecha && diagnostico.Fecha !== \"0001-01-01\"\n          ? diagnostico.Fecha.split('T')[0]\n          : '',\n      }));\n    } catch (error) {\n      console.error('Error al obtener el diagnóstico más reciente:', error);\n      setErrorMessage('Error al obtener el diagnóstico más reciente.');\n    }\n  };\n\n\n  useEffect(() => {\n    if (selectedFile) {\n      clearFormFields(); // Limpia antes de la nueva búsqueda\n      fetchLatestDiagnostico();\n    }\n  }, [selectedFile]);\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n      ...(name === 'region' && { subregion: '' }),\n    }));\n  };\n\n\n  const clearFormFields = () => {\n    setFormData({\n      hallazgos: '',\n      impresion: '',\n      observaciones: '',\n      medico: '',\n      medicoNuevo: localStorage.getItem('nombre'),\n      fecha: '',\n      tipoEstudio: '',\n      region: '',\n      proyeccion: '',\n      valido: '',\n      obtencion: '',\n      sexo: '',\n      edad: ''\n    });\n  };\n\n  const obtenerValoresDesdeClave = (clave) => {\n    if (!clave || clave.length < 11) return {};\n    const region = clave.substring(2, 4) || '';\n    const subregion = subregionesOptions[region]?.[0]?.value || ''; // Toma el primer valor por defecto\n    return {\n      tipoEstudio: clave.substring(0, 2) || '',\n      region,\n      subregion,\n      proyeccion: clave.substring(4, 6) || '',\n      valido: clave.substring(6, 7) || '',\n      obtencion: clave.substring(8, 9) || '',\n      sexo: clave.substring(9, 10) || '',\n      edad: clave.substring(10, 11) || '',\n    };\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const fileName = selectedFile.split('/').pop();\n      const newFileName = fileName.replace(/\\.jpg$/, '.dcm');\n      const formattedDate = new Date(formData.fecha).toISOString(); // Convert date to ISO format\n\n      // Fetch study based on the file\n      const fetchStudyResponse = await fetch(`${BASE_URL}/estudios/dicom?nombre=${newFileName}`);\n      if (!fetchStudyResponse.ok) {\n        throw new Error('Error al obtener el estudio');\n      }\n\n      const study = await fetchStudyResponse.json();\n      if (!study || !study.estudio_id) {\n        throw new Error('Estudio no encontrado');\n      }\n      console.log(formData.subregion, formData.region)\n      if (formData.subregion != null || formData.subregion != '') {\n        formData.region = formData.subregion\n      }\n\n      // Construct new key (clave) based on form data\n      const nuevaClave = formData.tipoEstudio + formData.region + formData.proyeccion + formData.valido + \"1\" + formData.obtencion + formData.sexo + formData.edad;\n      console.log('Nueva clave:', nuevaClave);\n\n      // Prepare updated diagnosis data\n      const updatedDiagnostico = {\n        hallazgos: formData.hallazgos,\n        impresion: formData.impresion,\n        observaciones: formData.observaciones,\n        medico: formData.medico,\n        medicoNuevo: localStorage.getItem('nombre'),\n        fecha: formattedDate,\n        tipoEstudio: formData.tipoEstudio,\n        region: formData.region,\n        proyeccion: formData.proyeccion,\n        valido: formData.valido,\n        obtencion: formData.obtencion,\n        sexo: formData.sexo,\n        edad: formData.edad,\n      };\n\n      // Send PATCH request to update diagnosis and image key\n      const updateResponse = await fetch(`${BASE_URL}/diagnosticos/${study.estudio_id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          imagenNombre: newFileName,  // Include image name\n          clave: nuevaClave,         // Include new key\n          diagnostico: updatedDiagnostico  // Include updated diagnostic info\n        }),\n      });\n\n      if (!updateResponse.ok) {\n        throw new Error('Error al actualizar el diagnóstico');\n      }\n      \n      alert('Diagnóstico guardado exitosamente');\n      setErrorMessage('');\n\n      // Reset form fields after successful update\n      setFormData({\n        hallazgos: '',\n        impresion: '',\n        observaciones: '',\n        medico: '',\n        medicoNuevo: '',\n        fecha: '',\n        tipoEstudio: '',\n        region: '',\n        proyeccion: '',\n        valido: '',\n        obtencion: '',\n        sexo: '',\n        edad: ''\n      });\n    } catch (error) {\n      console.error('Error al actualizar el diagnóstico:', error);\n      setErrorMessage('Error al actualizar el diagnóstico.');\n    }\n  };\n  return (\n    <div className=\"form-diagnostico\" style={{ margin: '20px' }}>\n      <h2>Diagnóstico</h2>\n      <form onSubmit={handleSubmit}>\n\n      <div className=\"form-group\">\n          <label style={{ fontWeight: 'bold' }}>Región:</label>\n          <select\n            name=\"region\"\n            value={formData.region}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\">Seleccione</option>\n            <option value=\"00\">Desconocido</option>\n            <option value=\"02\">Columna Vertebral</option>\n            <option value=\"26\">Pelvis</option>\n          </select>\n        </div>\n\n        {formData.region && subregionesOptions[formData.region] && (\n          <div className=\"form-group\">\n            <label style={{ fontWeight: 'bold' }}>Subregión:</label>\n            <select\n              name=\"subregion\"\n              value={formData.subregion}\n              onChange={handleChange}\n              required\n            >\n              <option value=\"\">Seleccione</option>\n              {subregionesOptions[formData.region].map((subregion) => (\n                <option key={subregion.value} value={subregion.value}>\n                  {subregion.label}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label style={{ fontWeight: 'bold' }}>Proyección:</label>\n          <select\n            name=\"proyeccion\"\n            value={formData.proyeccion}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\">Seleccione</option>\n            <option value=\"00\">Desconocido</option>\n            <option value=\"01\">Postero Anterior</option>\n            <option value=\"02\">Antero Posterior</option>\n            <option value=\"03\">Obliqua</option>\n            <option value=\"04\">Lateral Izquierda</option>\n            <option value=\"05\">Lateral Derecha</option>\n            <option value=\"06\">Especial</option>\n            <option value=\"07\">Comparativa</option>\n          </select>\n        </div>\n\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ fontWeight: 'bold' }} htmlFor=\"hallazgos\">Hallazgos:</label>\n          <textarea\n            id=\"hallazgos\"\n            name=\"hallazgos\"\n            placeholder=\"Ingresa los hallazgos\"\n            value={formData.hallazgos}\n            onChange={handleChange}\n            required\n            style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px', height: '100px', resize: 'vertical' }}\n          />\n        </div>\n\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ fontWeight: 'bold' }} htmlFor=\"impresion\">Impresión Diagnóstica:</label>\n          <textarea\n            id=\"impresion\"\n            name=\"impresion\"\n            placeholder=\"Ingresa la impresión diagnóstica\"\n            value={formData.impresion}\n            onChange={handleChange}\n            required\n            style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px', height: '100px', resize: 'vertical' }}\n          />\n        </div>\n\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ fontWeight: 'bold' }} htmlFor=\"observaciones\">Observaciones:</label>\n          <textarea\n            id=\"observaciones\"\n            name=\"observaciones\"\n            placeholder=\"Ingresa las observaciones\"\n            value={formData.observaciones}\n            onChange={handleChange}\n            required\n            style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px', height: '100px', resize: 'vertical' }}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label style={{ fontWeight: 'bold' }}>Sexo:</label>\n          <select\n            name=\"sexo\"\n            value={formData.sexo}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\">Seleccione</option>\n            <option value=\"0\">Desconocido</option>\n            <option value=\"1\">Masculino</option>\n            <option value=\"2\">Femenino</option>\n          </select>\n        </div>\n\n        {/* Edad */}\n        <div className=\"form-group\">\n          <label style={{ fontWeight: 'bold' }}>Edad:</label>\n          <select name=\"edad\" value={formData.edad} onChange={handleChange} required>\n            <option value=\"\">Seleccione</option>\n            <option value=\"0\">Desconocido</option>\n            <option value=\"1\">Lactante menores de 1 año</option>\n            <option value=\"2\">Prescolar 1-5</option>\n            <option value=\"3\">Infante 6-12</option>\n            <option value=\"4\">Adolescente 13-18</option>\n            <option value=\"5\">Adulto joven 19-26</option>\n            <option value=\"6\">Adulto 27-59</option>\n            <option value=\"7\">Adulto mayor 60+</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label style={{ fontWeight: 'bold' }}>Válido:</label>\n          <select\n            name=\"valido\"\n            value={formData.valido}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\">Seleccione</option>\n            <option value=\"0\">Desconocido</option>\n            <option value=\"1\">Sí</option>\n            <option value=\"2\">No</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label style={{ fontWeight: 'bold' }}>Obtencion:</label>\n          <select\n            name=\"obtencion\"\n            value={formData.Obtencion}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\">Seleccione</option>\n            <option value=\"2\">Desconocido</option>\n            <option value=\"1\">Estudio digital</option>\n            <option value=\"2\">Estudio Fisico</option>\n          </select>\n        </div>\n\n        {/* Campo para la fecha */}\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ fontWeight: 'bold' }} htmlFor=\"fecha\">Fecha del diagnóstico:</label>\n          <input\n            type=\"date\"\n            id=\"fecha\"\n            name=\"fecha\"\n            value={formData.fecha} // Asegúrate de que formData.fecha tenga un valor de fecha válido\n            onChange={handleChange}\n            readOnly\n            style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px' }}\n          />\n        </div>\n\n        {/* Campo para el médico */}\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ fontWeight: 'bold' }} htmlFor=\"medicoA\">Médico que hizo el diagnóstico:</label>\n          <input\n            type=\"text\"\n            id=\"medicoA\"\n            name=\"medicoA\"\n            placeholder=\"Ingresa el nombre del médico\"\n            value={formData.medico}\n            onChange={handleChange}\n            readOnly\n            style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px' }}\n          />\n        </div>\n\n        {/* Campo para el médico */}\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ fontWeight: 'bold' }} htmlFor=\"medico\">Tu nombre:</label>\n          <input\n            type=\"text\"\n            id=\"medico\"\n            name=\"medico\"\n            placeholder=\"Ingresa el nombre del médico\"\n            value={formData.medicoNuevo}\n            onChange={handleChange}\n            readOnly\n            style={{ width: '100%', padding: '10px', marginTop: '5px', border: '1px solid #ccc', borderRadius: '5px' }}\n          />\n        </div>\n\n        <button type=\"submit\" style={{ backgroundColor: '#28a745', color: 'white', padding: '10px 20px', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\n          Guardar diagnostico\n        </button>\n      </form>\n\n      {successMessage && <p>{successMessage}</p>}\n    </div>\n  );\n};\n\nexport default DiagnosticForm;\n","import React, { useState } from 'react';\nimport ThumbnailGallery from '../Miniaturas/ThumbnailGallery';\nimport DicomViewer from '../Visualizador/DicomViewer';\nimport { useNavigate } from 'react-router-dom'; // For back navigation\nimport Header from '../assets/Header';\nimport Footer from '../assets/Footer';\nimport Diagnosticos from './Diagnosticos'\nimport '../assets/App.css';\n\nfunction DiagnosticosPage() {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedImageD, setSelectedImageD] = useState(null);\n  const navigate = useNavigate();\n\n  const handleThumbnailClick = (image) => {\n    const fileName = image.split('/').pop().replace('.jpg', '.dcm');\n    console.log(\"dp\", fileName); // Este es el nombre que se va a usar\n    setSelectedImage(fileName);\n    setSelectedImageD(image); // Verifica que este valor sea el esperado\n    console.log(\"selectedImageD:\", fileName); // Asegúrate de que se esté actualizando\n  };\n\n\n  return (\n    <div className=\"visualizer-page\">\n      <Header />\n      <div className=\"next-module\" />\n      <div className=\"content\">\n        <div className=\"thumbnail-gallery\">\n          <ThumbnailGallery onThumbnailClick={handleThumbnailClick} />\n        </div>\n        <div className=\"dicom-viewer\">\n          {selectedImage ? (\n            <DicomViewer fileName={selectedImage} />\n          ) : (\n            <p>Selecciona una miniatura para ver la imagen DICOM.</p>\n          )}\n        </div>\n        <div className=\"study-info\">\n          {selectedImageD ? (\n            <Diagnosticos selectedFile={selectedImageD} />\n          ) : (\n            <p>Selecciona una miniatura para emitir un diagnostico.</p>\n          )}\n        </div>\n\n      </div>\n      <div className=\"next-module\" />\n      <Footer />\n    </div>\n  );\n}\n\nexport default DiagnosticosPage;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { BASE_URL } from '../config/config';\nimport '../assets/App.css';\n\nconst ThumbnailGallery = ({ onThumbnailClick }) => {\n  const [images, setImages] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n\n  const [tipoEstudio, setTipoEstudio] = useState('');\n  const [region, setRegion] = useState('');\n  const [subregion, setSubregion] = useState('');\n\n  // Define subregiones según la región seleccionada\n  const subregionesOptions = {\n    '02': [\n      { value: '03', label: 'Cervical' },\n      { value: '04', label: 'Torácica' },\n      { value: '05', label: 'Lumbar' },\n      { value: '06', label: 'Sacra' },\n      { value: '07', label: 'Coxis' }\n    ],\n    '26': [\n      { value: '18', label: 'Pelvis Adulto' },\n      { value: '19', label: 'Pelvis Infantil' },\n    ],\n  };\n\n  const fetchImages = useCallback(async (pageNumber) => {\n    if (!tipoEstudio) return;\n  \n    const selectedRegion = subregion || region;\n  \n    try {\n      const query = new URLSearchParams({\n        tipoEstudio: tipoEstudio,\n        ...(selectedRegion && { region: selectedRegion }),\n        page: pageNumber,\n        limit: 9, // Límite de imágenes por página\n      }).toString();\n  \n      const response = await fetch(`${BASE_URL}/thumbnails?${query}`);\n  \n      if (response.ok) {\n        const { images, total } = await response.json();\n  \n        if (pageNumber === 1) {\n          setImages(images);\n        } else {\n          setImages((prevImages) => [...prevImages, ...images]);\n        }\n  \n        // Desactivar más cargas si hemos alcanzado el total\n        if (pageNumber * 9 >= total) {\n          setHasMore(false);\n        } else {\n          setHasMore(true);\n        }\n  \n        setLoaded(true);\n      } else {\n        setError(\"Error al obtener las imágenes\");\n      }\n    } catch (error) {\n      setError(\"Error en la solicitud de imágenes: \" + error.message);\n    }\n  }, [region, subregion, tipoEstudio]);  \n\n  useEffect(() => {\n    // Resetear estado de imágenes y paginación al cambiar filtros\n    setImages([]);\n    setPage(1);\n    setHasMore(true);\n    setLoaded(false);\n    fetchImages(1);\n  }, [fetchImages, tipoEstudio, region, subregion]);\n\n  const handleLoadMore = () => {\n    if (hasMore) {\n      const nextPage = page + 1;\n      setPage(nextPage);\n      fetchImages(nextPage);\n    }\n  };\n\n  const handleRegionChange = (e) => {\n    setRegion(e.target.value);\n    setSubregion(''); // Resetear subregión al cambiar la región\n  };\n\n  const handleSubregionChange = (e) => {\n    setSubregion(e.target.value);\n  };\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className=\"thumbnail-gallery-container\" style={{ marginLeft: '100px', maxWidth: '1200px', margin: '0 auto' }}>\n      <h1 className=\"text-5xl font-extrabold mb-4 animate-reveal\" style={{ color: '#666666', marginTop: '20px', fontWeight: '900', fontFamily: 'Poppins', textAlign: 'center' }}>\n        Estudios médicos\n      </h1>\n\n      <div className=\"filters\" style={filterStyle}>\n        <label>\n          Tipo de Estudio:\n          <select value={tipoEstudio} onChange={(e) => setTipoEstudio(e.target.value)}>\n            <option value=\"\">Seleccione</option>\n            <option value=\"01\">Radiografía</option>\n            <option value=\"02\">Tomografía Computarizada</option>\n            <option value=\"03\">Resonancia Magnética</option>\n            <option value=\"04\">Ultrasonido</option>\n            <option value=\"05\">Mamografía</option>\n            <option value=\"06\">Angiografía</option>\n            <option value=\"07\">Medicina Nuclear</option>\n            <option value=\"08\">Medio de contraste</option>\n            <option value=\"09\">Fluoroscopia</option>\n          </select>\n        </label>\n\n        <label>\n          Región:\n          <select value={region} onChange={handleRegionChange}>\n            <option value=\"\">Seleccione</option>\n            <option value=\"00\">Desconocido</option>\n            <option value=\"02\">Columna Vertebral</option>\n            <option value=\"26\">Pelvis</option>\n          </select>\n        </label>\n\n        {region && subregionesOptions[region] && (\n          <label>\n            Subregión:\n            <select value={subregion} onChange={handleSubregionChange}>\n              <option value=\"\">Seleccione</option>\n              {subregionesOptions[region].map(option2 => (\n                <option key={option2.value} value={option2.value}>\n                  {option2.label}\n                </option>\n              ))}\n            </select>\n          </label>\n        )}\n      </div>\n\n      <div className=\"thumbnail-gallery\" style={{ marginTop: '20px' }}>\n        {loaded ? (\n          images.length > 0 ? (\n            <div style={galleryStyle}>\n              {images.map((image, index) => {\n\n                return (\n                  <div\n                    key={index}\n                    style={thumbnailContainerStyle}\n                    onClick={() => onThumbnailClick(image)}\n                    onContextMenu={(e) => e.preventDefault()}\n                  >\n                    <img\n                      src={image}\n                      alt={`Thumbnail ${index}`}\n                      style={thumbnailStyle}\n                      onError={(e) => { e.currentTarget.src = 'https://via.placeholder.com/150'; }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <p>No hay imágenes disponibles.</p>\n          )\n        ) : (\n          <p>Seleccione el tipo de estudio...</p>\n        )}\n        {hasMore && (\n          <button onClick={handleLoadMore} style={buttonStyle}>Cargar más</button>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\n// Estilos para la galería de miniaturas\nconst galleryStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))', // Se ajusta el tamaño de las columnas según el ancho\n  gap: '20px',\n  justifyContent: 'center',\n  padding: '20px',\n  border: '1px solid #ddd',\n  width: '100%', // Asegura que la galería ocupe el 100% del ancho disponible\n  boxSizing: 'border-box', // Incluye el padding y el borde en el ancho total\n};\n\nconst thumbnailStyle = {\n  width: '100%', // Permite que la miniatura ocupe el 100% del ancho del contenedor\n  height: 'auto', // Mantiene la proporción de la imagen\n  objectFit: 'cover',\n};\n\nconst thumbnailContainerStyle = {\n  cursor: 'pointer',\n  overflow: 'hidden',\n  position: 'relative',\n  borderRadius: '5px',\n  boxShadow: '0 2px 5px rgba(0, 0, 0, 0.2)', // Añade una sombra para mejorar la apariencia\n  transition: 'transform 0.2s', // Transición suave para el hover\n};\n\nconst thumbnailContainerHoverStyle = {\n  transform: 'scale(1.05)', // Efecto de zoom al pasar el ratón\n};\n\nconst filterStyle = {\n  marginBottom: '10px',\n  display: 'flex',\n  justifyContent: 'center', // Centra el filtro\n};\n\nconst buttonStyle = {\n  display: 'block',\n  margin: '20px auto',\n  padding: '10px 20px',\n  fontSize: '16px',\n  cursor: 'pointer',\n  backgroundColor: '#38b2ac', // Color de fondo para los botones\n  color: '#ffffff', // Color del texto\n  border: 'none', // Sin borde\n  borderRadius: '5px', // Bordes redondeados\n  transition: 'background-color 0.3s', // Transición suave para el hover\n};\n\nconst buttonHoverStyle = {\n  backgroundColor: '#26798e', // Cambia el color al pasar el ratón\n};\n\nexport default ThumbnailGallery;\n","import React, { useState, useEffect, useRef } from 'react';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport dicomParser from 'dicom-parser';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport { BASE_URL } from '../config/config';\nimport { ZoomTool, PanTool, LengthTool, RotateTool } from 'cornerstone-tools';\n\n// Configurar el cargador de imágenes DICOM\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone;\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\n// Configurar herramientas\nconst configureTools = () => {\n  cornerstoneTools.addTool(ZoomTool);\n  cornerstoneTools.addTool(PanTool);\n  cornerstoneTools.addTool(LengthTool);\n  cornerstoneTools.addTool(RotateTool); // Asumiendo que existe RotateTool\n\n  cornerstoneTools.setToolActive('Zoom', { mouseButtonMask: 1 });\n  cornerstoneTools.setToolActive('Pan', { mouseButtonMask: 1 });\n  cornerstoneTools.setToolActive('Length', { mouseButtonMask: 1 });\n  cornerstoneTools.setToolActive('Rotate', { mouseButtonMask: 1 }); // Asumiendo que existe RotateTool\n};\n\nconst DicomViewer = ({ fileName }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    const element = elementRef.current;\n\n    if (element && fileName) {\n      const imageId = `wadouri:${BASE_URL}/image/${fileName}`;\n\n      const loadImage = async () => {\n        setLoading(true);\n        setError(null);\n\n        try {\n          cornerstone.enable(element);\n          configureTools();\n\n          const image = await cornerstone.loadImage(imageId);\n          cornerstone.displayImage(element, image);\n\n          // Activar la herramienta de zoom por defecto\n          cornerstoneTools.setToolActive('Zoom', { mouseButtonMask: 1 });\n\n        } catch (error) {\n          setError('Error al cargar la imagen DICOM.');\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      loadImage();\n\n      return () => {\n        if (element) {\n          cornerstone.disable(element);\n        }\n      };\n    }\n  }, [fileName]);\n\n  const zoomIn = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.scale *= 1.2; // Incrementar el nivel de zoom\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const zoomOut = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.scale /= 1.2; // Decrementar el nivel de zoom\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const moveLeft = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.translation.x -= 10; // Mover a la izquierda\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const moveRight = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.translation.x += 20; // Mover a la derecha\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const moveUp = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.translation.y -= 20; // Mover hacia arriba\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const moveDown = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.translation.y += 20; // Mover hacia abajo\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const rotateClockwise = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.rotation += 0.75; // Rotar en sentido horario\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  const rotateCounterClockwise = () => {\n    const viewport = cornerstone.getViewport(elementRef.current);\n    viewport.rotation -= 0.75; // Rotar en sentido antihorario\n    cornerstone.setViewport(elementRef.current, viewport);\n  };\n\n  return (\n    <div className=\"dicom-viewer-container\">\n      <div\n        onContextMenu={(e) => e.preventDefault()}\n        ref={elementRef}\n        className=\"dicom-viewer\"\n        style={{ width: '100%', height: '100%' }}\n      >\n        {loading && <p>Cargando imagen DICOM...</p>}\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n      </div>\n\n      <div className=\"tool-buttons\" style={{ marginTop: '10px', display: 'flex', justifyContent: 'center', gap: '10px' }}>\n        <button onClick={zoomIn}>Zoom +</button>\n        <button onClick={zoomOut}>Zoom -</button>\n        <button onClick={moveDown}>Mover ↑</button>\n        <button onClick={rotateCounterClockwise}>Rotar ←</button>\n        <button onClick={rotateClockwise}>Rotar →</button>\n        <button onClick={moveRight}>Mover ←</button>\n        <button onClick={moveUp}>Mover ↓</button>\n        <button onClick={moveLeft}>Mover →</button>\n      </div>\n    </div>\n  );\n\n};\n\nexport default DicomViewer;"],"names":["_ref","selectedFile","formData","setFormData","useState","hallazgos","impresion","observaciones","medico","medicoNuevo","localStorage","getItem","fecha","tipoEstudio","region","proyeccion","valido","obtencion","sexo","edad","subregionesOptions","value","label","clave","setClave","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","clearFormFields","async","newFileName","split","pop","replace","fetchStudyResponse","fetch","BASE_URL","ok","Error","study","json","estudio_id","fetchDiagnosticoResponse","response","diagnostico","claveImagen","valoresClave","obtenerValoresDesdeClave","prevData","Hallazgos","Impresion","Observaciones","Medico","Fecha","error","console","fetchLatestDiagnostico","handleChange","e","name","target","subregion","_subregionesOptions$r","_subregionesOptions$r2","length","substring","_jsxs","className","style","margin","children","_jsx","onSubmit","preventDefault","formattedDate","Date","toISOString","log","nuevaClave","updatedDiagnostico","method","headers","body","JSON","stringify","imagenNombre","alert","fontWeight","onChange","required","map","marginBottom","htmlFor","id","placeholder","width","padding","marginTop","border","borderRadius","height","resize","Obtencion","type","readOnly","backgroundColor","color","cursor","selectedImage","setSelectedImage","selectedImageD","setSelectedImageD","useNavigate","Header","ThumbnailGallery","onThumbnailClick","image","fileName","DicomViewer","Diagnosticos","Footer","galleryStyle","display","gridTemplateColumns","gap","justifyContent","boxSizing","thumbnailStyle","objectFit","thumbnailContainerStyle","overflow","position","boxShadow","transition","filterStyle","buttonStyle","fontSize","images","setImages","loaded","setLoaded","setError","page","setPage","hasMore","setHasMore","setTipoEstudio","setRegion","setSubregion","fetchImages","useCallback","selectedRegion","query","URLSearchParams","pageNumber","limit","toString","total","prevImages","message","marginLeft","maxWidth","fontFamily","textAlign","option2","index","onClick","onContextMenu","src","alt","onError","currentTarget","handleLoadMore","nextPage","cornerstoneWADOImageLoader","cornerstone","dicomParser","loading","setLoading","elementRef","useRef","element","current","imageId","cornerstoneTools","ZoomTool","PanTool","LengthTool","RotateTool","mouseButtonMask","loadImage","ref","zoomIn","viewport","scale","zoomOut","moveDown","translation","y","rotateCounterClockwise","rotation","rotateClockwise","moveRight","x","moveUp","moveLeft"],"sourceRoot":""}