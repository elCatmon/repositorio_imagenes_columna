{"version":3,"file":"static/js/3.a0a1e01d.chunk.js","mappings":"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","sources":["components/Donaciones/RegistroDonaciones.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from '../assets/Header';\nimport Footer from '../assets/Footer';\nimport \"./RegistroDonaciones.css\";\nimport { BASE_URL } from '../config/config';\n\nfunction FormularioEstudios() {\n  const [datosPersona, setDatosPersona] = useState({\n    correo: '',\n    curp: '',\n  });\n\n  const [datosEstudios, setDatosEstudios] = useState([\n    { tipoEstudio: '', cantidadImagenes: 0, esDonacion: false, observaciones: '' }\n  ]);\n\n  const [registros, setRegistros] = useState([]);\n\n  const tiposEstudio = [\n    'Radiografia', 'Tomografia Computarizada', 'Resonancia Magnetica',\n    'Ultrasonido', 'Mastografia', 'Angiografia', 'Medicina Nuclear', 'Fluoroscopia'\n  ];\n\n  const handlePersonaChange = (e) => {\n    const { name, value } = e.target;\n    setDatosPersona((prevDatos) => ({\n      ...prevDatos,\n      [name]: value\n    }));\n  };\n\n  const handleEstudioChange = (index, event) => {\n    const { name, value, type, checked } = event.target;\n\n    setDatosEstudios(prevState => {\n      const newState = [...prevState];\n      newState[index] = {\n        ...newState[index],\n        [name]: type === 'checkbox' ? checked : name === 'cantidadImagenes' ? parseInt(value, 10) || 0 : value,\n      };\n      return newState;\n    });\n  };\n\n  const agregarOtroEstudio = () => {\n    setDatosEstudios((prevDatosEstudios) => [\n      ...prevDatosEstudios,\n      { tipoEstudio: '', cantidadImagenes: 0, esDonacion: false, observaciones: '' }\n    ]);\n  };\n\n  const calcularFechaPrestamo = () => {\n    const fecha = new Date();\n    let diasAgregados = 0;\n    while (diasAgregados < 5) {\n      fecha.setDate(fecha.getDate() + 1);\n      if (fecha.getDay() !== 0 && fecha.getDay() !== 6) {\n        diasAgregados++;\n      }\n    }\n    return fecha.toISOString();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!isValidCURP(datosPersona.curp)) {\n      alert('Por favor, ingresa un CURP válido.');\n      return;\n    }\n\n    const folio = Math.floor(Math.random() * 1e11).toString().padStart(12, '0');\n    const fechaRecepcion = new Date().toISOString();\n\n    const estudiosConDonacionesYObservaciones = datosEstudios.map(estudio => ({\n      tipoEstudio: estudio.tipoEstudio,\n      cantidadImagenes: parseInt(estudio.cantidadImagenes, 10),\n      esDonacion: estudio.esDonacion,\n      observaciones: estudio.observaciones,\n      fechaDevolucion: estudio.esDonacion ? '' : calcularFechaPrestamo() // Enviar vacío si es donación\n    }));\n\n    const tiposDeEstudioConcatenados = datosEstudios.map(estudio => estudio.tipoEstudio).join(', ');\n    const totalCantidadImagenes = datosEstudios.reduce((total, estudio) => total + estudio.cantidadImagenes, 0);\n\n    const nuevoRegistro = {\n      folio,\n      fechaRecepcion,\n      ...datosPersona,\n      estudios: tiposDeEstudioConcatenados,\n      cantidadTotalImagenes: totalCantidadImagenes,\n      detallesEstudios: estudiosConDonacionesYObservaciones,\n    };\n\n    try {\n      const response = await fetch(`${BASE_URL}/api/estudios`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(nuevoRegistro),\n      });\n\n      if (!response.ok) {\n        throw new Error('Error al guardar el estudio');\n      }\n\n      setRegistros((prevRegistros) => [...prevRegistros, nuevoRegistro]);\n\n      // Reiniciar los campos\n      setDatosPersona({\n        correo: '',\n        curp: '',\n      });\n      setDatosEstudios([{ tipoEstudio: '', cantidadImagenes: 0, esDonacion: false, observaciones: '' }]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const formatDate = (date) => {\n    if (!date) return '-';\n    const d = new Date(date);\n    return `${String(d.getDate()).padStart(2, '0')}-${String(d.getMonth() + 1).padStart(2, '0')}-${d.getFullYear()}`;\n  };\n\n  const isValidCURP = (curp) => {\n    const curpRegex = /^[A-Z]{4}\\d{6}[HM][A-Z]{5}[A-Z0-9]{2}$/;\n    return curpRegex.test(curp);\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\".registro-container\">\n        <div className=\"container\">\n          <form onSubmit={handleSubmit}>\n            <h2>Datos de la Persona</h2>\n\n            <label>\n              Correo:\n              <input\n                type=\"email\"\n                name=\"correo\"\n                value={datosPersona.correo}\n                onChange={handlePersonaChange}\n                required\n                className=\"input-field-R\"\n              />\n            </label>\n\n            <label>\n              CURP:\n              <input\n                type=\"text\"\n                name=\"curp\"\n                value={datosPersona.curp}\n                onChange={handlePersonaChange}\n                required\n                className=\"input-field-R\"\n                maxLength={18}\n              />\n            </label>\n\n            <h2>Datos de los Estudios</h2>\n            {datosEstudios.map((estudio, index) => (\n              <div key={index}>\n                <label>\n                  Tipo de Estudio:\n                  <select\n                    name=\"tipoEstudio\"\n                    value={estudio.tipoEstudio}\n                    onChange={(e) => handleEstudioChange(index, e)}  // Ensure event is passed\n                    required\n                    className=\"input-field-R\"\n                  >\n                    <option value=\"\">Seleccionar</option>\n                    {tiposEstudio.map((tipo, tipoIndex) => (\n                      <option key={tipoIndex} value={tipo}>{tipo}</option>\n                    ))}\n                  </select>\n                </label>\n\n                <label>\n                  Cantidad de Imágenes:\n                  <input\n                    type=\"number\"\n                    name=\"cantidadImagenes\"\n                    value={estudio.cantidadImagenes}\n                    onChange={(e) => handleEstudioChange(index, e)}  // Ensure event is passed\n                    min=\"1\"\n                    required\n                    className=\"input-field-R\"\n                  />\n                </label>\n                <div>\n                  <label>\n                    Donación:\n                    <input\n                      type=\"checkbox\"\n                      name=\"esDonacion\"\n                      checked={datosEstudios.esDonacion}\n                      onChange={(event) => handleEstudioChange(index, event)}\n                    />\n                  </label>\n\n                  <label>\n                    Observaciones:\n                    <textarea\n                      name=\"observaciones\"\n                      value={datosEstudios.observaciones}\n                      onChange={(event) => handleEstudioChange(index, event)}\n                      className=\"input-field-R\"\n                    />\n                  </label>\n                </div>\n\n              </div>\n            ))}\n\n            <button type=\"button\" onClick={agregarOtroEstudio} className=\"add-study-button-R\">\n              Agregar otro estudio\n            </button>\n            <button type=\"submit\">Guardar</button>\n          </form>\n        </div>\n\n        {/* Tabla de registros guardados */}\n        {registros.length > 0 && (\n          <div className=\"table-container-R\">\n            <h2>Registros Guardados</h2>\n            <table className=\"data-table-R\">\n              <thead>\n                <tr>\n                  <th>Folio</th>\n                  <th>Fecha de Recepción</th>\n                  <th>Fecha de Devolución</th>\n                  <th>CURP</th>\n                </tr>\n              </thead>\n              <tbody>\n                {registros.map((registro, index) => (\n                  <tr key={index}>\n                    <td>{registro.folio}</td>\n                    <td>{formatDate(registro.fechaRecepcion)}</td>\n                    <td>{formatDate(registro.fechaDevolucion)}</td>\n                    <td>{registro.curp}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n      <div className=\"next-module\" />\n      <Footer />\n    </div>\n  );\n}\n\nexport default FormularioEstudios;"],"names":["datosPersona","setDatosPersona","useState","correo","curp","datosEstudios","setDatosEstudios","tipoEstudio","cantidadImagenes","esDonacion","observaciones","registros","setRegistros","tiposEstudio","handlePersonaChange","e","name","value","target","prevDatos","handleEstudioChange","index","event","type","checked","prevState","newState","parseInt","calcularFechaPrestamo","fecha","Date","diasAgregados","setDate","getDate","getDay","toISOString","formatDate","date","d","String","padStart","getMonth","getFullYear","isValidCURP","test","_jsxs","children","_jsx","Header","className","onSubmit","async","preventDefault","alert","folio","Math","floor","random","toString","fechaRecepcion","estudiosConDonacionesYObservaciones","map","estudio","fechaDevolucion","tiposDeEstudioConcatenados","join","totalCantidadImagenes","reduce","total","nuevoRegistro","estudios","cantidadTotalImagenes","detallesEstudios","fetch","BASE_URL","method","headers","body","JSON","stringify","ok","Error","prevRegistros","error","console","onChange","required","maxLength","tipo","tipoIndex","min","onClick","agregarOtroEstudio","prevDatosEstudios","length","registro","Footer"],"sourceRoot":""}