{"version":3,"file":"static/js/555.42eae76c.chunk.js","mappings":"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","sources":["components/Donaciones/Donacion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Importar useEffect\nimport JSZip from 'jszip';\nimport { BASE_URL } from '../config/config';\nimport * as dicomParser from 'dicom-parser';\nimport Header from '../assets/Header';\nimport Footer from '../assets/Footer';\nimport \"./Donaciones.css\";\n\nconst Donaciones = () => {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [tipoEstudio, setTipoEstudio] = useState('');\n  const [error, setError] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n\n  // useEffect para cambiar el mensaje después de 10 segundos\n  useEffect(() => {\n    let timer1, timer2;\n\n    if (uploading) {\n      // Primer temporizador: cambiar el mensaje después de 10 segundos\n      timer1 = setTimeout(() => {\n        setLoadingMessage('Esto está tardando más de lo esperado, por favor espere...');\n\n        // Segundo temporizador: cambiar el mensaje después de 20 segundos adicionales (30 segundos en total)\n        timer2 = setTimeout(() => {\n          setLoadingMessage('El tiempo de subida y procesamiento depende de la cantidad de archivos, por favor espera...');\n        }, 20000); // 20 segundos adicionales\n      }, 10000); // 10 segundos iniciales\n    }\n\n    // Limpiar ambos temporizadores cuando el componente se desmonte\n    return () => {\n      clearTimeout(timer1);\n      clearTimeout(timer2);\n    };\n  }, [uploading]);\n\n  const handleFileChange = async (event) => {\n    const files = Array.from(event.target.files);\n    const validFiles = [];\n    const maxSize = 1024 * 1024 * 1024;\n\n    for (const file of files) {\n      if (file.size > maxSize) {\n        setError(`El archivo ${file.name} excede el límite de 50 MB.`);\n        continue;\n      }\n\n      if (file.name.endsWith('.zip')) {\n        const containsDicom = await handleZipFile(file);\n        if (!containsDicom) {\n          setError(`El archivo ZIP ${file.name} no contiene imágenes DICOM válidas.`);\n        }\n      } else if (file.name.endsWith('.dicom') || file.name.endsWith('.dcm')) {\n        const metadata = await extractMetadata(file);\n        validFiles.push({ file, tipoEstudio: tipoEstudio || 'No seleccionado', metadata });\n      } else {\n        setError(`El archivo ${file.name} no es un DICOM, DCM o ZIP válido.`);\n      }\n    }\n\n    if (validFiles.length > 0) {\n      setSelectedFiles((prevFiles) => [...prevFiles, ...validFiles]);\n    }\n  };\n\n  const handleZipFile = async (zipFile) => {\n    const zip = new JSZip();\n    const zipContent = await zip.loadAsync(zipFile);\n    const dicomFiles = [];\n\n    for (const filename in zipContent.files) {\n      if (filename.endsWith('.dicom') || filename.endsWith('.dcm')) {\n        const fileContent = await zip.file(filename).async('arraybuffer');\n        const dicomFile = new File([fileContent], filename);\n        const metadata = await extractMetadata(dicomFile);\n        dicomFiles.push({ file: dicomFile, tipoEstudio: tipoEstudio || 'No seleccionado', metadata });\n      }\n    }\n\n    if (dicomFiles.length > 0) {\n      setSelectedFiles((prevFiles) => [...prevFiles, ...dicomFiles]);\n      return true;\n    }\n    return false;\n  };\n\n  const extractMetadata = async (file) => {\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const uint8Array = new Uint8Array(arrayBuffer);\n      const dataSet = dicomParser.parseDicom(uint8Array);\n\n      const ageString = dataSet.string('x00101010');\n      const age = ageString ? parseInt(ageString) : 'No disponible';\n\n      const sex = dataSet.string('x00100040');\n      const region = dataSet.string('x00181020');\n\n      const dateStr = dataSet.string('x00080022');\n      const date = dateStr ? formatDate(dateStr) : 'No disponible';\n\n      return { age, sex, region, date };\n    } catch (err) {\n      console.error('Error al extraer metadatos:', err);\n      return { age: 'No disponible', sex: 'No disponible', region: 'No disponible', date: 'No disponible' };\n    }\n  };\n\n  const formatDate = (dateStr) => {\n    if (dateStr.length === 8) {\n      return `${dateStr.slice(0, 4)}-${dateStr.slice(4, 6)}-${dateStr.slice(6, 8)}`;\n    }\n    return 'Formato de fecha inválido';\n  };\n\n  const handleTipoEstudioChange = (event) => {\n    setTipoEstudio(event.target.value);\n  };\n\n  const handleUploadClick = async () => {\n    if (!tipoEstudio) {\n      alert('Por favor, seleccione un tipo de estudio.');\n      return;\n    }\n\n    if (selectedFiles.length === 0) {\n      alert('No hay archivos seleccionados para subir.');\n      return;\n    }\n\n    const formData = new FormData();\n    selectedFiles.forEach(({ file }) => {\n      formData.append('files', file);\n    });\n    const donador = localStorage.getItem('userID');\n    const estudioid = Math.floor(Math.random() * 10000000000).toString().padStart(10, '0');\n    formData.append('estudioID', estudioid)\n    formData.append('tipoEstudio', tipoEstudio);\n    formData.append('donador', donador)\n\n    try {\n      setUploading(true);\n      setLoadingMessage('Por favor espera, se están cargando tus archivos, este proceso podría tardar un poco...');\n      const response = await fetch(`${BASE_URL}/donacion`, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        alert('Archivos subidos exitosamente.');\n        setSelectedFiles([]);\n        setTipoEstudio('');\n      } else {\n        const errorText = await response.text();\n        setError(`Error al subir archivos: ${errorText}`);\n      }\n    } catch (error) {\n      setError(`Error de red: ${error.message}`);\n    } finally {\n      setUploading(false);\n      setLoadingMessage(''); // Clear loading message\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <header className=\"header-section text-center py-12 mt-8\" style={{ backgroundColor: 'transparent !important', paddingTop: '10px' }}>\n        <h1 className=\"text-5xl font-extrabold mb-4 animate-reveal\" style={{ color: '#666666', backgroundColor: 'transparent !important', marginTop: '20px', fontWeight: '900', fontFamily: 'Poppins' }}>\n          Donación de archivos\n        </h1>\n        <p className=\"text-xl text-gray-700\" style={{ backgroundColor: 'transparent !important', marginTop: '20px', fontSize: '20px', fontFamily: 'Poppins' }}>\n          Elige el tipo de estudio y los archivos correspondientes para realizar tu donación\n        </p>\n      </header>\n      <div className=\"donaciones-left\" onContextMenu={(e) => e.preventDefault()}>\n        <div>\n          <label htmlFor=\"tipo-estudio\">Tipo de Estudio:</label>\n          <select id=\"tipo-estudio\" value={tipoEstudio} onChange={handleTipoEstudioChange}>\n            <option value=\"00\">Seleccione</option>\n            <option value=\"01\">Radiografía</option>\n            <option value=\"02\">Tomografía Computarizada</option>\n            <option value=\"03\">Resonancia Magnética</option>\n            <option value=\"04\">Ultrasonido</option>\n            <option value=\"05\">Mamografía</option>\n            <option value=\"06\">Angiografía</option>\n            <option value=\"07\">Medicina Nuclear</option>\n            <option value=\"08\">Radio Terapia</option>\n            <option value=\"09\">Fluoroscopia</option>\n          </select>\n        </div>\n        <br></br>\n        <input\n          type=\"file\"\n          accept=\".dcm, .dicom, .zip\"\n          multiple\n          onChange={handleFileChange}\n          className=\"file-input\"\n        />\n\n        <button\n          onClick={handleUploadClick}\n          className=\"upload-button\"\n          disabled={uploading || !tipoEstudio || selectedFiles.length === 0}\n        >\n          {uploading ? 'Subiendo...' : 'Subir Archivos'}\n        </button>\n\n        <div class=\"text-center\">\n          <p>Al subir tus archivos aceptas que has leído nuestro\n            <a href=\"/documentos/AVISO_PRIVACIDAD.pdf\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Términos y Condiciones\">\n              Aviso de Privacidad\n            </a>\n            y has aceptado nuestros\n            <a href=\"/documentos/TERMINOS_CONDICIONES.pdf\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Aviso de Privacidad\">\n              Términos y Condiciones\n            </a>.\n          </p>\n        </div>\n\n        {loadingMessage && <p className=\"loading-message\">{loadingMessage}</p>} {/* Mostrar mensaje de carga */}\n        {error && <p className=\"error-message\">{error}</p>}\n\n        {uploading && (\n          <div className=\"loading-spinner\">\n            <div className=\"spinner\"></div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"donaciones-right\">\n        {selectedFiles.length > 0 ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Nombre del archivo</th>\n                <th>Edad</th>\n                <th>Sexo</th>\n                <th>Región del cuerpo</th>\n                <th>Fecha de toma</th>\n                <th>Fecha de carga</th>\n                <th>Tipo de estudio</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedFiles.map(({ file, metadata }, index) => (\n                <tr key={index}>\n                  <td>{file.name}</td>\n                  <td>{metadata.age || 'No disponible'}</td>\n                  <td>{metadata.sex || 'No disponible'}</td>\n                  <td>{metadata.region || 'No disponible'}</td>\n                  <td>{metadata.date || 'No disponible'}</td>\n                  <td>{new Date().toLocaleString()}</td>\n                  <td>{tipoEstudio}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <p>No hay archivos seleccionados.</p>\n        )}\n      </div>\n      <div className='next-module' />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Donaciones;"],"names":["Donaciones","selectedFiles","setSelectedFiles","useState","tipoEstudio","setTipoEstudio","error","setError","uploading","setUploading","loadingMessage","setLoadingMessage","useEffect","timer1","timer2","setTimeout","clearTimeout","handleZipFile","async","zip","JSZip","zipContent","loadAsync","zipFile","dicomFiles","filename","files","endsWith","fileContent","file","dicomFile","File","metadata","extractMetadata","push","length","prevFiles","arrayBuffer","uint8Array","Uint8Array","dataSet","dicomParser","ageString","string","age","parseInt","sex","region","dateStr","date","formatDate","err","console","slice","_jsxs","children","_jsx","Header","className","style","backgroundColor","paddingTop","color","marginTop","fontWeight","fontFamily","fontSize","onContextMenu","e","preventDefault","htmlFor","id","value","onChange","event","target","type","accept","multiple","Array","from","validFiles","size","name","onClick","alert","formData","FormData","forEach","_ref","append","donador","localStorage","getItem","estudioid","Math","floor","random","toString","padStart","response","fetch","BASE_URL","method","body","headers","ok","errorText","text","message","disabled","class","href","rel","map","_ref2","index","Date","toLocaleString","Footer"],"sourceRoot":""}